{"file_contents":{"frontend/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"frontend/src/pages/HospitalDashboard.tsx":{"content":"import { FC, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer\n} from 'recharts';\nimport {\n  Home,\n  Users,\n  UserCheck,\n  Search,\n  Settings,\n  Heart,\n  Phone,\n  MapPin,\n  Calendar,\n  ChevronDown,\n  ChevronRight,\n  Edit,\n  Trash2,\n  CheckCircle,\n  XCircle,\n  MessageSquare,\n  Filter,\n  Star\n} from 'lucide-react';\n\ninterface DonorData {\n  id: number;\n  name: string;\n  bloodType: string;\n  location: string;\n  status: 'active' | 'pending' | 'inactive';\n  lastDonation?: string;\n  contact: string;\n  medicalConditions?: string;\n  donationHistory?: string;\n  age?: number;\n  gender?: string;\n  city?: string;\n  state?: string;\n  email?: string;\n}\n\nconst HospitalDashboard: FC = () => {\n  const [activeTab, setActiveTab] = useState<'overview' | 'donors' | 'manage' | 'find' | 'settings'>('overview');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterBloodGroup, setFilterBloodGroup] = useState<string>('all');\n  const [expandedDonor, setExpandedDonor] = useState<number | null>(null);\n  const [showManageModal, setShowManageModal] = useState(false);\n  const [selectedDonor, setSelectedDonor] = useState<DonorData | null>(null);\n  const [aiSearchQuery, setAiSearchQuery] = useState('');\n  const [aiResults, setAiResults] = useState<DonorData[]>([]);\n\n  const donors: DonorData[] = [\n    {\n      id: 1,\n      name: \"John Doe\",\n      bloodType: \"O+\",\n      location: \"City Hospital\",\n      status: \"active\",\n      contact: \"+1234567890\",\n      lastDonation: \"2024-02-01\",\n      medicalConditions: \"None\",\n      donationHistory: \"Regular donor\",\n      age: 28,\n      gender: \"Male\",\n      city: \"Mumbai\",\n      state: \"Maharashtra\",\n      email: \"john.doe@email.com\"\n    },\n    {\n      id: 2,\n      name: \"Jane Smith\",\n      bloodType: \"A+\",\n      location: \"General Hospital\",\n      status: \"pending\",\n      contact: \"+0987654321\",\n      lastDonation: \"2024-01-15\",\n      medicalConditions: \"Mild anemia\",\n      donationHistory: \"First time\",\n      age: 32,\n      gender: \"Female\",\n      city: \"Delhi\",\n      state: \"Delhi\",\n      email: \"jane.smith@email.com\"\n    },\n    {\n      id: 3,\n      name: \"Sam Wilson\",\n      bloodType: \"B+\",\n      location: \"Central Hospital\",\n      status: \"inactive\",\n      contact: \"+1122334455\",\n      lastDonation: \"2023-12-10\",\n      medicalConditions: \"None\",\n      donationHistory: \"Regular donor\",\n      age: 25,\n      gender: \"Male\",\n      city: \"Bangalore\",\n      state: \"Karnataka\",\n      email: \"sam.wilson@email.com\"\n    },\n    {\n      id: 4,\n      name: \"Emily Johnson\",\n      bloodType: \"AB+\",\n      location: \"Eastside Hospital\",\n      status: \"active\",\n      contact: \"+2233445566\",\n      lastDonation: \"2024-02-05\",\n      medicalConditions: \"None\",\n      donationHistory: \"Regular donor\",\n      age: 29,\n      gender: \"Female\",\n      city: \"Chennai\",\n      state: \"Tamil Nadu\",\n      email: \"emily.johnson@email.com\"\n    },\n    {\n      id: 5,\n      name: \"Michael Brown\",\n      bloodType: \"O-\",\n      location: \"Westend Hospital\",\n      status: \"pending\",\n      contact: \"+3344556677\",\n      lastDonation: \"2024-01-20\",\n      medicalConditions: \"None\",\n      donationHistory: \"First time\",\n      age: 35,\n      gender: \"Male\",\n      city: \"Kolkata\",\n      state: \"West Bengal\",\n      email: \"michael.brown@email.com\"\n    },\n  ];\n\n  const stats = {\n    totalDonors: donors.length,\n    pendingDonors: donors.filter(d => d.status === 'pending').length,\n    approvedDonors: donors.filter(d => d.status === 'active').length,\n    urgentRequests: 3\n  };\n\n  const monthlyData = [\n    { month: 'Jan', donations: 45 },\n    { month: 'Feb', donations: 52 },\n    { month: 'Mar', donations: 38 },\n    { month: 'Apr', donations: 61 },\n    { month: 'May', donations: 49 },\n    { month: 'Jun', donations: 55 }\n  ];\n\n  const bloodGroupData = [\n    { name: 'O+', value: 35, color: '#FF6B6B' },\n    { name: 'A+', value: 28, color: '#4ECDC4' },\n    { name: 'B+', value: 22, color: '#45B7D1' },\n    { name: 'AB+', value: 8, color: '#FFA07A' },\n    { name: 'O-', value: 4, color: '#98D8C8' },\n    { name: 'A-', value: 3, color: '#F7DC6F' }\n  ];\n\n  const filteredDonors = donors.filter(donor => {\n    const matchesSearch = donor.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         donor.bloodType.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         donor.city?.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || donor.status === filterStatus;\n    const matchesBloodGroup = filterBloodGroup === 'all' || donor.bloodType === filterBloodGroup;\n    return matchesSearch && matchesStatus && matchesBloodGroup;\n  });\n\n  const handleApproveDonor = (id: number) => {\n    // In a real app, this would update the backend\n    console.log('Approving donor:', id);\n  };\n\n  const handleRejectDonor = (id: number) => {\n    // In a real app, this would update the backend\n    console.log('Rejecting donor:', id);\n  };\n\n  const handleEditDonor = (donor: DonorData) => {\n    setSelectedDonor(donor);\n    setShowManageModal(true);\n  };\n\n  const handleDeleteDonor = (id: number) => {\n    // In a real app, this would delete from backend\n    console.log('Deleting donor:', id);\n  };\n\n  const handleAISearch = () => {\n    // Mock AI search - in real app, this would call an AI service\n    const results = donors.filter(d => d.bloodType === aiSearchQuery && d.status === 'active')\n      .map(donor => ({\n        ...donor,\n        aiScore: Math.floor(Math.random() * 40) + 60, // Mock score 60-100\n        eta: `${Math.floor(Math.random() * 60) + 15} min`,\n        reliability: Math.floor(Math.random() * 5) + 1\n      }))\n      .sort((a, b) => (b.aiScore || 0) - (a.aiScore || 0));\n\n    setAiResults(results);\n  };\n\n  const sidebarItems = [\n    { id: 'overview', label: 'Overview', icon: Home },\n    { id: 'donors', label: 'Donors List', icon: Users },\n    { id: 'manage', label: 'Manage Donors', icon: UserCheck },\n    { id: 'find', label: 'Find Donor (AI)', icon: Search },\n    { id: 'settings', label: 'Settings', icon: Settings }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 bg-white/90 backdrop-blur-md shadow-xl border-r border-teal-200\">\n        <div className=\"p-6 border-b border-teal-200\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"bg-teal-100 p-2 rounded-lg\">\n              <Heart className=\"h-6 w-6 text-teal-600\" />\n            </div>\n            <div>\n              <h2 className=\"font-bold text-teal-800\">BloodBond</h2>\n              <p className=\"text-sm text-teal-600\">Hospital Portal</p>\n            </div>\n          </div>\n        </div>\n\n        <nav className=\"p-4\">\n          <ul className=\"space-y-2\">\n            {sidebarItems.map((item) => {\n              const Icon = item.icon;\n              return (\n                <li key={item.id}>\n                  <button\n                    onClick={() => setActiveTab(item.id as any)}\n                    className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg transition-all duration-200 ${\n                      activeTab === item.id\n                        ? 'bg-gradient-to-r from-teal-500 to-teal-600 text-white shadow-lg'\n                        : 'text-teal-700 hover:bg-teal-50 hover:text-teal-800'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">{item.label}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Top Bar */}\n        <header className=\"bg-white/90 backdrop-blur-md shadow-sm border-b border-teal-200 p-4\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold text-teal-800\">\n              {sidebarItems.find(item => item.id === activeTab)?.label}\n            </h1>\n\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-teal-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search donors...\"\n                  className=\"pl-10 pr-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500 focus:border-transparent\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n\n              <button\n                onClick={() => setShowManageModal(true)}\n                className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 text-teal-900 px-4 py-2 rounded-lg font-medium hover:from-yellow-500 hover:to-yellow-600 transition-all duration-200\"\n              >\n                Manage Donors\n              </button>\n\n              <div className=\"w-10 h-10 bg-teal-100 rounded-full flex items-center justify-center\">\n                <Users className=\"h-5 w-5 text-teal-600\" />\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Content Area */}\n        <main className=\"flex-1 p-6 overflow-auto\">\n          {activeTab === 'overview' && (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"space-y-6\"\n            >\n              {/* Stats Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <motion.div\n                  whileHover={{ scale: 1.05 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-teal-600 text-sm font-medium\">Total Donors</p>\n                      <p className=\"text-3xl font-bold text-teal-800\">{stats.totalDonors}</p>\n                    </div>\n                    <Heart className=\"h-8 w-8 text-teal-500\" />\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  whileHover={{ scale: 1.05 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-yellow-600 text-sm font-medium\">Pending Donors</p>\n                      <p className=\"text-3xl font-bold text-yellow-800\">{stats.pendingDonors}</p>\n                    </div>\n                    <Users className=\"h-8 w-8 text-yellow-500\" />\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  whileHover={{ scale: 1.05 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-green-600 text-sm font-medium\">Approved Donors</p>\n                      <p className=\"text-3xl font-bold text-green-800\">{stats.approvedDonors}</p>\n                    </div>\n                    <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  whileHover={{ scale: 1.05 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-red-600 text-sm font-medium\">Urgent Requests</p>\n                      <p className=\"text-3xl font-bold text-red-800\">{stats.urgentRequests}</p>\n                    </div>\n                    <XCircle className=\"h-8 w-8 text-red-500\" />\n                  </div>\n                </motion.div>\n              </div>\n\n              {/* Charts */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <h3 className=\"text-lg font-semibold text-teal-800 mb-4\">Monthly Donations</h3>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={monthlyData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"month\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Bar dataKey=\"donations\" fill=\"#0D9488\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\"\n                >\n                  <h3 className=\"text-lg font-semibold text-teal-800 mb-4\">Blood Group Distribution</h3>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <PieChart>\n                      <Pie\n                        data={bloodGroupData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={80}\n                        dataKey=\"value\"\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      >\n                        {bloodGroupData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </motion.div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'donors' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"space-y-6\"\n            >\n              {/* Filters */}\n              <div className=\"flex flex-wrap gap-4\">\n                <select\n                  value={filterStatus}\n                  onChange={(e) => setFilterStatus(e.target.value)}\n                  className=\"px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                >\n                  <option value=\"all\">All Status</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"inactive\">Inactive</option>\n                </select>\n\n                <select\n                  value={filterBloodGroup}\n                  onChange={(e) => setFilterBloodGroup(e.target.value)}\n                  className=\"px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                >\n                  <option value=\"all\">All Blood Groups</option>\n                  <option value=\"A+\">A+</option>\n                  <option value=\"A-\">A-</option>\n                  <option value=\"B+\">B+</option>\n                  <option value=\"B-\">B-</option>\n                  <option value=\"AB+\">AB+</option>\n                  <option value=\"AB-\">AB-</option>\n                  <option value=\"O+\">O+</option>\n                  <option value=\"O-\">O-</option>\n                </select>\n              </div>\n\n              {/* Donors Table */}\n              <div className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg border border-teal-200 overflow-hidden\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead className=\"bg-teal-50\">\n                      <tr>\n                        <th className=\"px-6 py-4 text-left text-sm font-semibold text-teal-800\">Name</th>\n                        <th className=\"px-6 py-4 text-left text-sm font-semibold text-teal-800\">Blood Group</th>\n                        <th className=\"px-6 py-4 text-left text-sm font-semibold text-teal-800\">Location</th>\n                        <th className=\"px-6 py-4 text-left text-sm font-semibold text-teal-800\">Status</th>\n                        <th className=\"px-6 py-4 text-left text-sm font-semibold text-teal-800\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filteredDonors.map((donor) => (\n                        <>\n                          <tr key={donor.id} className=\"border-t border-teal-100 hover:bg-teal-25\">\n                            <td className=\"px-6 py-4\">\n                              <div className=\"flex items-center space-x-3\">\n                                <button\n                                  onClick={() => setExpandedDonor(expandedDonor === donor.id ? null : donor.id)}\n                                  className=\"text-teal-600 hover:text-teal-800\"\n                                >\n                                  {expandedDonor === donor.id ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\n                                </button>\n                                <span className=\"font-medium text-teal-800\">{donor.name}</span>\n                              </div>\n                            </td>\n                            <td className=\"px-6 py-4 text-teal-700\">{donor.bloodType}</td>\n                            <td className=\"px-6 py-4 text-teal-700\">{donor.city}, {donor.state}</td>\n                            <td className=\"px-6 py-4\">\n                              <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n                                donor.status === 'active' ? 'bg-green-100 text-green-800' :\n                                donor.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                                'bg-gray-100 text-gray-800'\n                              }`}>\n                                {donor.status}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4\">\n                              <div className=\"flex space-x-2\">\n                                <button\n                                  onClick={() => handleEditDonor(donor)}\n                                  className=\"text-teal-600 hover:text-teal-800\"\n                                >\n                                  <Edit className=\"h-4 w-4\" />\n                                </button>\n                                {donor.status === 'pending' && (\n                                  <>\n                                    <button\n                                      onClick={() => handleApproveDonor(donor.id)}\n                                      className=\"text-green-600 hover:text-green-800\"\n                                    >\n                                      <CheckCircle className=\"h-4 w-4\" />\n                                    </button>\n                                    <button\n                                      onClick={() => handleRejectDonor(donor.id)}\n                                      className=\"text-red-600 hover:text-red-800\"\n                                    >\n                                      <XCircle className=\"h-4 w-4\" />\n                                    </button>\n                                  </>\n                                )}\n                              </div>\n                            </td>\n                          </tr>\n                          {expandedDonor === donor.id && (\n                            <tr>\n                              <td colSpan={5} className=\"px-6 py-4 bg-teal-25\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                                  <div>\n                                    <p><strong>Age:</strong> {donor.age}</p>\n                                    <p><strong>Gender:</strong> {donor.gender}</p>\n                                    <p><strong>Email:</strong> {donor.email}</p>\n                                    <p><strong>Phone:</strong> {donor.contact}</p>\n                                  </div>\n                                  <div>\n                                    <p><strong>Last Donation:</strong> {donor.lastDonation}</p>\n                                    <p><strong>Medical Conditions:</strong> {donor.medicalConditions}</p>\n                                    <p><strong>Donation History:</strong> {donor.donationHistory}</p>\n                                  </div>\n                                </div>\n                              </td>\n                            </tr>\n                          )}\n                        </>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'manage' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"text-center py-12\"\n            >\n              <UserCheck className=\"h-16 w-16 text-teal-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-teal-800 mb-2\">Manage Donors</h3>\n              <p className=\"text-teal-600\">Use the \"Manage Donors\" button in the top bar to edit donor information.</p>\n            </motion.div>\n          )}\n\n          {activeTab === 'find' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"space-y-6\"\n            >\n              <div className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\">\n                <h3 className=\"text-lg font-semibold text-teal-800 mb-4\">AI-Powered Donor Matching</h3>\n                <div className=\"flex gap-4 mb-6\">\n                  <select\n                    value={aiSearchQuery}\n                    onChange={(e) => setAiSearchQuery(e.target.value)}\n                    className=\"px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  >\n                    <option value=\"\">Select Blood Group</option>\n                    <option value=\"A+\">A+</option>\n                    <option value=\"A-\">A-</option>\n                    <option value=\"B+\">B+</option>\n                    <option value=\"B-\">B-</option>\n                    <option value=\"AB+\">AB+</option>\n                    <option value=\"AB-\">AB-</option>\n                    <option value=\"O+\">O+</option>\n                    <option value=\"O-\">O-</option>\n                  </select>\n                  <button\n                    onClick={handleAISearch}\n                    className=\"bg-gradient-to-r from-teal-500 to-teal-600 text-white px-6 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition-all duration-200\"\n                  >\n                    Find Best Matches\n                  </button>\n                </div>\n\n                {aiResults.length > 0 && (\n                  <div className=\"space-y-4\">\n                    {aiResults.map((donor) => (\n                      <motion.div\n                        key={donor.id}\n                        initial={{ opacity: 0, y: 20 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        className=\"bg-gradient-to-r from-teal-50 to-yellow-50 rounded-lg p-4 border border-teal-200\"\n                      >\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-3 mb-2\">\n                              <h4 className=\"font-semibold text-teal-800\">{donor.name}</h4>\n                              <span className=\"bg-teal-100 text-teal-800 px-2 py-1 rounded text-sm font-medium\">\n                                {donor.bloodType}\n                              </span>\n                              <div className=\"flex items-center space-x-1\">\n                                {[...Array(donor.reliability)].map((_, i) => (\n                                  <Star key={i} className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                                ))}\n                              </div>\n                            </div>\n                            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-teal-700\">\n                              <div>\n                                <MapPin className=\"h-4 w-4 inline mr-1\" />\n                                {donor.city}, {donor.state}\n                              </div>\n                              <div>\n                                <Calendar className=\"h-4 w-4 inline mr-1\" />\n                                ETA: {donor.eta}\n                              </div>\n                              <div>\n                                <Phone className=\"h-4 w-4 inline mr-1\" />\n                                {donor.contact}\n                              </div>\n                              <div className=\"flex items-center space-x-2\">\n                                <span>AI Score:</span>\n                                <div className=\"flex-1 bg-teal-200 rounded-full h-2\">\n                                  <div\n                                    className=\"bg-gradient-to-r from-teal-500 to-yellow-500 h-2 rounded-full\"\n                                    style={{ width: `${donor.aiScore}%` }}\n                                  ></div>\n                                </div>\n                                <span className=\"font-semibold\">{donor.aiScore}%</span>\n                              </div>\n                            </div>\n                          </div>\n                          <button className=\"bg-gradient-to-r from-green-500 to-green-600 text-white px-4 py-2 rounded-lg font-medium hover:from-green-600 hover:to-green-700 transition-all duration-200 flex items-center space-x-2\">\n                            <MessageSquare className=\"h-4 w-4\" />\n                            <span>Send SMS</span>\n                          </button>\n                        </div>\n                      </motion.div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'settings' && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"max-w-2xl mx-auto\"\n            >\n              <div className=\"bg-white/80 backdrop-blur-md rounded-xl shadow-lg p-6 border border-teal-200\">\n                <h3 className=\"text-lg font-semibold text-teal-800 mb-6\">Hospital Settings</h3>\n\n                <div className=\"space-y-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-teal-700 mb-2\">Hospital Name</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"City General Hospital\"\n                      className=\"w-full px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-teal-700 mb-2\">Contact Email</label>\n                    <input\n                      type=\"email\"\n                      defaultValue=\"admin@citygeneral.com\"\n                      className=\"w-full px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-teal-700 mb-2\">Phone Number</label>\n                    <input\n                      type=\"tel\"\n                      defaultValue=\"+1-555-0123\"\n                      className=\"w-full px-4 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"font-medium text-teal-800\">Dark Mode</h4>\n                      <p className=\"text-sm text-teal-600\">Toggle between light and dark themes</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input type=\"checkbox\" className=\"sr-only peer\" />\n                      <div className=\"w-11 h-6 bg-teal-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-teal-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-teal-600\"></div>\n                    </label>\n                  </div>\n\n                  <div className=\"flex space-x-4\">\n                    <button className=\"bg-gradient-to-r from-teal-500 to-teal-600 text-white px-6 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition-all duration-200\">\n                      Save Changes\n                    </button>\n                    <button className=\"bg-red-500 text-white px-6 py-2 rounded-lg font-medium hover:bg-red-600 transition-all duration-200\">\n                      Logout\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </main>\n      </div>\n\n      {/* Manage Donor Modal */}\n      {showManageModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"bg-white rounded-xl shadow-xl max-w-md w-full mx-4\"\n          >\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-teal-800 mb-4\">\n                {selectedDonor ? 'Edit Donor' : 'Add New Donor'}\n              </h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-teal-700 mb-1\">Name</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={selectedDonor?.name}\n                    className=\"w-full px-3 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-teal-700 mb-1\">Blood Group</label>\n                  <select\n                    defaultValue={selectedDonor?.bloodType}\n                    className=\"w-full px-3 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  >\n                    <option value=\"A+\">A+</option>\n                    <option value=\"A-\">A-</option>\n                    <option value=\"B+\">B+</option>\n                    <option value=\"B-\">B-</option>\n                    <option value=\"AB+\">AB+</option>\n                    <option value=\"AB-\">AB-</option>\n                    <option value=\"O+\">O+</option>\n                    <option value=\"O-\">O-</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-teal-700 mb-1\">Contact</label>\n                  <input\n                    type=\"tel\"\n                    defaultValue={selectedDonor?.contact}\n                    className=\"w-full px-3 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-teal-700 mb-1\">Status</label>\n                  <select\n                    defaultValue={selectedDonor?.status}\n                    className=\"w-full px-3 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  >\n                    <option value=\"active\">Active</option>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"inactive\">Inactive</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-teal-700 mb-1\">Notes</label>\n                  <textarea\n                    defaultValue={selectedDonor?.medicalConditions}\n                    className=\"w-full px-3 py-2 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    rows={3}\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowManageModal(false)}\n                  className=\"flex-1 bg-gray-200 text-gray-800 px-4 py-2 rounded-lg font-medium hover:bg-gray-300 transition-all duration-200\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Handle save logic here\n                    setShowManageModal(false);\n                  }}\n                  className=\"flex-1 bg-gradient-to-r from-teal-500 to-teal-600 text-white px-4 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition-all duration-200\"\n                >\n                  Save Changes\n                </button>\n                {selectedDonor && (\n                  <button\n                    onClick={() => {\n                      if (window.confirm('Are you sure you want to delete this donor?')) {\n                        handleDeleteDonor(selectedDonor.id);\n                        setShowManageModal(false);\n                      }\n                    }}\n                    className=\"bg-red-500 text-white px-4 py-2 rounded-lg font-medium hover:bg-red-600 transition-all duration-200\"\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </button>\n                )}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HospitalDashboard;\n","size_bytes":35042},"frontend/src/counter.ts":{"content":"export function setupCounter(element: HTMLButtonElement) {\n  let counter = 0\n  const setCounter = (count: number) => {\n    counter = count\n    element.innerHTML = `count is ${counter}`\n  }\n  element.addEventListener('click', () => setCounter(counter + 1))\n  setCounter(0)\n}\n","size_bytes":274},"TODO.md":{"content":"# TODO: Restructure Project to Separate Frontend and Backend\n\n## Phase 1: Move and Adapt Frontend Files\n- [ ] Move components/ directory from root to frontend/src/\n- [ ] Move hooks/ directory from root to frontend/src/\n- [ ] Move lib/ directory from root to frontend/src/\n- [ ] Adapt app/layout.tsx to frontend/src/components/Layout.tsx (remove Next.js specifics, use React)\n- [ ] Adapt app/page.tsx to frontend/src/components/Home.tsx (convert to React component)\n- [ ] Move app/globals.css to frontend/src/index.css (adapt for Vite)\n- [ ] Update frontend/package.json with all necessary dependencies (Radix UI, Supabase, Recharts, react-router-dom, etc.)\n- [ ] Update frontend/src/App.tsx to use Layout and Home components, add routing\n- [ ] Update frontend/src/main.tsx to include theme provider and router\n\n## Phase 2: Move and Setup Backend Files\n- [ ] Move prisma/ directory from root to backend/\n- [ ] Move prisma.config.ts from root to backend/\n- [ ] Update backend/package.json to include Prisma, @prisma/client, dotenv, tsx, etc.\n- [ ] Update backend/server.js to include Prisma client and basic API routes (health, welcome, and placeholders for auth/data)\n\n## Phase 3: Update Imports and Configurations\n- [ ] Update all import paths in moved files to match new structure\n- [ ] Ensure Tailwind config and PostCSS are set up in frontend/\n\n## Phase 4: Install Dependencies and Setup\n- [ ] Run npm install in frontend/\n- [ ] Run npm install in backend/\n- [ ] Run npx prisma generate in backend/\n- [ ] Run npx prisma migrate dev --name init in backend/ (assuming DB is set up)\n- [ ] Run npm run db:seed in backend/ if DB is available\n\n## Phase 5: Test and Verify\n- [ ] Run npm run dev in frontend/ and check for errors\n- [ ] Run npm run dev in backend/ and check for errors\n- [ ] Ensure no linting errors in frontend/\n- [ ] Ensure no build errors in frontend/\n- [ ] Test API endpoints from frontend to backend\n","size_bytes":1916},"prisma/seed.ts":{"content":"import { PrismaClient } from '../lib/generated/prisma/client';\n\nconst prisma = new PrismaClient();\n\nasync function main() {\n  console.log('Seeding database...');\n\n  // Create sample users\n  const donorUser = await prisma.user.create({\n    data: {\n      email: 'john.donor@example.com',\n      password: '$2b$10$hashedpassword', // In real app, hash properly\n      role: 'DONOR',\n    },\n  });\n\n  const hospitalUser = await prisma.user.create({\n    data: {\n      email: 'hospital@example.com',\n      password: '$2b$10$hashedpassword', // In real app, hash properly\n      role: 'HOSPITAL',\n    },\n  });\n\n  // Create donor profile\n  const donorProfile = await prisma.donorProfile.create({\n    data: {\n      userId: donorUser.id,\n      firstName: 'John',\n      lastName: 'Doe',\n      dateOfBirth: new Date('1990-01-01'),\n      bloodType: 'O_POSITIVE',\n      phone: '+1234567890',\n      address: '123 Main St',\n      city: 'Anytown',\n      state: 'CA',\n      zipCode: '12345',\n      emergencyContact: 'Jane Doe: +0987654321',\n      medicalHistory: 'No significant medical history',\n    },\n  });\n\n  // Create hospital profile\n  const hospitalProfile = await prisma.hospitalProfile.create({\n    data: {\n      userId: hospitalUser.id,\n      name: 'General Hospital',\n      address: '456 Hospital Ave',\n      city: 'Medical City',\n      state: 'CA',\n      zipCode: '67890',\n      phone: '+1122334455',\n      email: 'admin@generalhospital.com',\n      licenseNumber: 'LIC123456',\n      isVerified: true,\n    },\n  });\n\n  // Create sample donation\n  await prisma.donation.create({\n    data: {\n      donorId: donorProfile.id,\n      bloodType: 'O_POSITIVE',\n      quantity: 450,\n      donationDate: new Date(),\n      location: 'General Hospital',\n      status: 'COMPLETED',\n      notes: 'First donation',\n    },\n  });\n\n  // Create sample blood request\n  const bloodRequest = await prisma.bloodRequest.create({\n    data: {\n      hospitalId: hospitalProfile.id,\n      bloodType: 'O_POSITIVE',\n      quantity: 500,\n      urgency: 'HIGH',\n      reason: 'Emergency surgery',\n      status: 'PENDING',\n      deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days from now\n    },\n  });\n\n  // Create AI match\n  await prisma.match.create({\n    data: {\n      requestId: bloodRequest.id,\n      donorId: donorProfile.id,\n      score: 95.5,\n      status: 'PENDING',\n    },\n  });\n\n  console.log('Database seeded successfully!');\n}\n\nmain()\n  .catch((e) => {\n    console.error(e);\n    process.exit(1);\n  })\n  .finally(async () => {\n    await prisma.$disconnect();\n  });\n","size_bytes":2549},"backend/server.js":{"content":"const express = require('express');\nconst cors = require('cors');\nconst mongoose = require('mongoose');\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Middleware\napp.use(cors());\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect('mongodb://localhost:27017/bloodLink', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n.then(() => console.log('Connected to MongoDB - bloodLink database'))\n.catch(err => console.error('MongoDB connection error:', err));\n\n// Donor Schema\nconst donorSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  age: { type: Number, required: true, min: 18, max: 65 },\n  gender: { type: String, required: true },\n  bloodGroup: { type: String, required: true },\n  email: { type: String, required: true },\n  phone: { type: String, required: true },\n  address: { type: String, required: true },\n  city: { type: String, required: true },\n  state: { type: String, required: true },\n  medicalConditions: { type: String, required: true },\n  donationHistory: { type: String, required: true },\n  status: { type: String, default: 'pending' },\n  createdAt: { type: Date, default: Date.now }\n});\n\nconst Donor = mongoose.model('Donor', donorSchema);\n\n// Routes\napp.get('/api/health', (req, res) => {\n  res.json({ status: 'OK', message: 'Backend is running' });\n});\n\napp.get('/api/welcome', (req, res) => {\n  console.log(`Request received: ${req.method} ${req.path}`);\n  res.json({ message: 'Welcome to the Node.js Backend!' });\n});\n\n// Donor routes\napp.post('/api/donors', async (req, res) => {\n  try {\n    const donor = new Donor(req.body);\n    await donor.save();\n    res.status(201).json({ message: 'Donor registered successfully', donor });\n  } catch (error) {\n    console.error('Error saving donor:', error);\n    res.status(400).json({ error: 'Failed to register donor', details: error.message });\n  }\n});\n\napp.get('/api/donors', async (req, res) => {\n  try {\n    const donors = await Donor.find();\n    res.json(donors);\n  } catch (error) {\n    console.error('Error fetching donors:', error);\n    res.status(500).json({ error: 'Failed to fetch donors' });\n  }\n});\n\napp.patch('/api/donors/:id', async (req, res) => {\n  try {\n    const donor = await Donor.findByIdAndUpdate(req.params.id, req.body, { new: true });\n    if (!donor) {\n      return res.status(404).json({ error: 'Donor not found' });\n    }\n    res.json(donor);\n  } catch (error) {\n    console.error('Error updating donor:', error);\n    res.status(500).json({ error: 'Failed to update donor' });\n  }\n});\n\n// Start server\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n","size_bytes":2640},"frontend/src/pages/Home.tsx":{"content":"import { Link } from 'react-router-dom';\nimport { Heart, Users, Shield, Award } from 'lucide-react';\n\nconst Home = () => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100\">\n      {/* Hero Section */}\n      <section className=\"relative py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <Heart className=\"mx-auto h-16 w-16 text-teal-600 mb-8\" />\n          <h1 className=\"text-4xl md:text-6xl font-bold text-teal-900 mb-6\">\n            Save Lives with Every Drop\n          </h1>\n          <p className=\"text-xl text-teal-700 mb-8 max-w-3xl mx-auto\">\n            Connect blood donors with hospitals in need. Join our community and make a difference today.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link\n              to=\"/register\"\n              className=\"bg-teal-600 hover:bg-teal-700 text-white px-8 py-3 rounded-lg font-semibold text-lg transition-colors\"\n            >\n              Become a Donor\n            </Link>\n            <Link\n              to=\"/login\"\n              className=\"bg-white hover:bg-gray-50 text-teal-600 px-8 py-3 rounded-lg font-semibold text-lg border border-teal-600 transition-colors\"\n            >\n              Hospital Login\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-white/50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h2 className=\"text-3xl font-bold text-center text-teal-900 mb-12\">\n            Why Choose BloodLink?\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <Users className=\"mx-auto h-12 w-12 text-teal-600 mb-4\" />\n              <h3 className=\"text-xl font-semibold text-teal-900 mb-2\">\n                Connect Donors & Hospitals\n              </h3>\n              <p className=\"text-teal-700\">\n                Seamlessly connect willing donors with hospitals in urgent need of blood.\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <Shield className=\"mx-auto h-12 w-12 text-teal-600 mb-4\" />\n              <h3 className=\"text-xl font-semibold text-teal-900 mb-2\">\n                Safe & Secure\n              </h3>\n              <p className=\"text-teal-700\">\n                All donations are screened and processed through certified medical facilities.\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <Award className=\"mx-auto h-12 w-12 text-teal-600 mb-4\" />\n              <h3 className=\"text-xl font-semibold text-teal-900 mb-2\">\n                Life-Saving Impact\n              </h3>\n              <p className=\"text-teal-700\">\n                Every donation can save up to three lives. Your contribution matters.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl font-bold text-teal-900 mb-6\">\n            Ready to Make a Difference?\n          </h2>\n          <p className=\"text-xl text-teal-700 mb-8\">\n            Join thousands of donors who are saving lives every day.\n          </p>\n          <Link\n            to=\"/register\"\n            className=\"bg-teal-600 hover:bg-teal-700 text-white px-8 py-3 rounded-lg font-semibold text-lg transition-colors inline-block\"\n          >\n            Get Started Today\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":3714},"frontend/src/pages/DonorRegistration.tsx":{"content":"import { useForm } from 'react-hook-form';\nimport { Heart, User, Mail, Phone, MapPin, Calendar, Eye, EyeOff, Lock } from 'lucide-react';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\ntype FormData = {\n  name: string;\n  age: number;\n  gender: string;\n  bloodGroup: string;\n  email: string;\n  phone: string;\n  password: string;\n  confirmPassword: string;\n  address: string;\n  city: string;\n  state: string;\n  medicalConditions?: string;\n  donationHistory?: string;\n  location: string;\n};\n\nconst DonorRegistration: React.FC = () => {\n  const { register, handleSubmit, formState: { errors }, reset, watch } = useForm<FormData>();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n\n  const onSubmit = async (data: FormData) => {\n    setIsSubmitting(true);\n    try {\n      // Prepare data for backend\n      const donorData = {\n        name: data.name,\n        age: data.age,\n        gender: data.gender,\n        bloodGroup: data.bloodGroup,\n        email: data.email,\n        phone: data.phone,\n        address: data.address,\n        city: data.city,\n        state: data.state,\n        medicalConditions: data.medicalConditions || 'None',\n        donationHistory: data.donationHistory || 'First time',\n        status: 'pending'\n      };\n\n      console.log('Sending donor data to backend:', donorData);\n\n      // Send to backend API\n      const response = await fetch('http://localhost:5000/api/donors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(donorData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('Backend response:', result);\n\n      toast.success('🎉 Registration successful! Your data has been saved to the database.');\n      reset();\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error('❌ Registration failed. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n\n  const bloodGroups = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\n  const states = [\n    'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chhattisgarh',\n    'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jharkhand', 'Karnataka',\n    'Kerala', 'Madhya Pradesh', 'Maharashtra', 'Manipur', 'Meghalaya', 'Mizoram',\n    'Nagaland', 'Odisha', 'Punjab', 'Rajasthan', 'Sikkim', 'Tamil Nadu',\n    'Telangana', 'Tripura', 'Uttar Pradesh', 'Uttarakhand', 'West Bengal',\n    'Delhi', 'Jammu and Kashmir', 'Ladakh', 'Puducherry', 'Chandigarh',\n    'Andaman and Nicobar Islands', 'Dadra and Nagar Haveli and Daman and Diu',\n    'Lakshadweep'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100 py-12 px-4\">\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white/80 backdrop-blur-md rounded-2xl shadow-xl p-8\">\n          <div className=\"text-center mb-8\">\n            <div className=\"bg-teal-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Heart className=\"h-8 w-8 text-teal-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-teal-800 mb-2\">Become a Blood Donor</h1>\n            <p className=\"text-gray-600\">Join our network and help save lives with AI-powered matching</p>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Full Name *</label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('name', { required: 'Name is required' })}\n                    type=\"text\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n                {errors.name && <p className=\"text-red-500 text-sm mt-1\">{errors.name.message}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Age *</label>\n                <div className=\"relative\">\n                  <Calendar className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('age', {\n                      required: 'Age is required',\n                      min: { value: 18, message: 'Must be at least 18' },\n                      max: { value: 65, message: 'Must be under 65' }\n                    })}\n                    type=\"number\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Enter your age\"\n                  />\n                </div>\n                {errors.age && <p className=\"text-red-500 text-sm mt-1\">{errors.age.message}</p>}\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Gender *</label>\n                <select\n                  {...register('gender', { required: 'Gender is required' })}\n                  className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                >\n                  <option value=\"\">Select gender</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other</option>\n                </select>\n                {errors.gender && <p className=\"text-red-500 text-sm mt-1\">{errors.gender.message}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Blood Group *</label>\n                <select\n                  {...register('bloodGroup', { required: 'Blood group is required' })}\n                  className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                >\n                  <option value=\"\">Select blood group</option>\n                  {bloodGroups.map(group => <option key={group} value={group}>{group}</option>)}\n                </select>\n                {errors.bloodGroup && <p className=\"text-red-500 text-sm mt-1\">{errors.bloodGroup.message}</p>}\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Email *</label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('email', {\n                      required: 'Email is required',\n                      pattern: { value: /^\\S+@\\S+$/i, message: 'Invalid email' }\n                    })}\n                    type=\"email\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n                {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Phone *</label>\n                <div className=\"relative\">\n                  <Phone className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('phone', {\n                      required: 'Phone is required',\n                      pattern: { value: /^[0-9]{10}$/, message: '10 digits required' }\n                    })}\n                    type=\"tel\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Enter 10-digit number\"\n                  />\n                </div>\n                {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone.message}</p>}\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Password *</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('password', {\n                      required: 'Password is required',\n                      minLength: { value: 8, message: 'Password must be at least 8 characters' }\n                    })}\n                    type={showPassword ? 'text' : 'password'}\n                    className=\"w-full pl-10 pr-10 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Create a password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n                {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password.message}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">Confirm Password *</label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                  <input\n                    {...register('confirmPassword', {\n                      required: 'Please confirm your password',\n                      validate: value => value === watch('password') || 'Passwords do not match'\n                    })}\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    className=\"w-full pl-10 pr-10 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                    placeholder=\"Confirm your password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-gray-400\" />\n                    )}\n                  </button>\n                </div>\n                {errors.confirmPassword && <p className=\"text-red-500 text-sm mt-1\">{errors.confirmPassword.message}</p>}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-teal-700 mb-2\">Address *</label>\n              <div className=\"relative\">\n                <MapPin className=\"absolute left-3 top-3 h-5 w-5 text-teal-400\" />\n                <input\n                  {...register('address', { required: 'Address is required' })}\n                  type=\"text\"\n                  className=\"w-full pl-10 pr-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  placeholder=\"Enter your full address\"\n                />\n              </div>\n              {errors.address && <p className=\"text-red-500 text-sm mt-1\">{errors.address.message}</p>}\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">City *</label>\n                <input\n                  {...register('city', { required: 'City is required' })}\n                  type=\"text\"\n                  className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                  placeholder=\"Enter your city\"\n                />\n                {errors.city && <p className=\"text-red-500 text-sm mt-1\">{errors.city.message}</p>}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-teal-700 mb-2\">State *</label>\n                <select\n                  {...register('state', { required: 'State is required' })}\n                  className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                >\n                  <option value=\"\">Select state</option>\n                  {states.map(state => <option key={state} value={state}>{state}</option>)}\n                </select>\n                {errors.state && <p className=\"text-red-500 text-sm mt-1\">{errors.state.message}</p>}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-teal-700 mb-2\">Medical Conditions</label>\n              <textarea\n                {...register('medicalConditions')}\n                rows={3}\n                className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                placeholder=\"List any medical conditions...\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-teal-700 mb-2\">Donation History</label>\n              <select {...register('donationHistory')} className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\">\n                <option value=\"\">Select history</option>\n                <option value=\"first-time\">First time</option>\n                <option value=\"regular\">Regular donor</option>\n                <option value=\"frequent\">Frequent donor</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-teal-700 mb-2\">Preferred Location *</label>\n              <input\n                {...register('location', { required: 'Location is required' })}\n                type=\"text\"\n                className=\"w-full px-4 py-3 border border-teal-200 rounded-lg focus:ring-2 focus:ring-teal-500\"\n                placeholder=\"Enter preferred location\"\n              />\n              {errors.location && <p className=\"text-red-500 text-sm mt-1\">{errors.location.message}</p>}\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"w-full bg-lemon-500 hover:bg-lemon-600 disabled:bg-gray-400 text-teal-900 font-bold py-4 px-6 rounded-lg transition-colors flex items-center justify-center space-x-2\"\n            >\n              {isSubmitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-teal-900\"></div>\n                  <span>Registering...</span>\n                </>\n              ) : (\n                <>\n                  <Heart className=\"h-5 w-5\" />\n                  <span>Register as Donor</span>\n                </>\n              )}\n            </button>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DonorRegistration;\n","size_bytes":15943},"frontend/postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"frontend/src/pages/Login.tsx":{"content":"import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Eye, EyeOff, Heart } from 'lucide-react';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      // TODO: Implement login API call\n      console.log('Login attempt:', formData);\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      toast.success('Login successful!');\n      navigate('/dashboard');\n    } catch (error) {\n      toast.error('Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-teal-50 to-teal-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <Heart className=\"mx-auto h-12 w-12 text-teal-600\" />\n          <h2 className=\"mt-6 text-3xl font-extrabold text-teal-900\">\n            Sign in to your account\n          </h2>\n          <p className=\"mt-2 text-sm text-teal-600\">\n            Or{' '}\n            <Link\n              to=\"/register\"\n              className=\"font-medium text-teal-600 hover:text-teal-500\"\n            >\n              create a new account\n            </Link>\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-teal-500 focus:border-teal-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"relative\">\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-teal-500 focus:border-teal-500 focus:z-10 sm:text-sm pr-10\"\n                placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              <button\n                type=\"button\"\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                {showPassword ? (\n                  <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                ) : (\n                  <Eye className=\"h-5 w-5 text-gray-400\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-teal-600 focus:ring-teal-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                Remember me\n              </label>\n            </div>\n\n            <div className=\"text-sm\">\n              <a href=\"#\" className=\"font-medium text-teal-600 hover:text-teal-500\">\n                Forgot your password?\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? 'Signing in...' : 'Sign in'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","size_bytes":5140},"frontend/src/pages/LandingPage.tsx":{"content":"import { Link } from 'react-router-dom';\nimport { Heart, Users, Shield, MapPin } from 'lucide-react';\n\nconst LandingPage = () => {\n  const hospitals = [\n    { name: 'City General Hospital', location: 'Downtown', image: '/api/placeholder/300/200' },\n    { name: 'Metro Medical Center', location: 'Midtown', image: '/api/placeholder/300/200' },\n    { name: 'Regional Health Clinic', location: 'Uptown', image: '/api/placeholder/300/200' },\n    { name: 'Community Care Hospital', location: 'Suburbs', image: '/api/placeholder/300/200' },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-br from-teal-400 via-teal-500 to-teal-600 text-white\">\n        <div className=\"absolute inset-0 bg-black/20\"></div>\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\n              Connecting Life with AI\n            </h1>\n            <p className=\"text-xl md:text-2xl mb-8 max-w-3xl mx-auto\">\n              Smart Blood Donation Platform — Register as a donor today and help hospitals find you faster with AI.\n            </p>\n            <div>\n              <Link\n                to=\"/register\"\n                className=\"bg-lemon-400 hover:bg-lemon-500 text-teal-900 px-8 py-4 rounded-lg font-bold text-lg transition-colors inline-block\"\n              >\n                Become a Donor Today\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-teal-800 mb-4\">How It Works</h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto\">\n              Our AI-powered platform makes blood donation simple and efficient\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center p-6 bg-teal-50 rounded-lg\">\n              <div className=\"bg-teal-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"h-8 w-8 text-teal-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-teal-800 mb-2\">Register</h3>\n              <p className=\"text-gray-600\">Add your info and medical details to join our donor network</p>\n            </div>\n\n            <div className=\"text-center p-6 bg-teal-50 rounded-lg\">\n              <div className=\"bg-teal-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"h-8 w-8 text-teal-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-teal-800 mb-2\">Get Verified</h3>\n              <p className=\"text-gray-600\">Hospitals review and approve your donor profile</p>\n            </div>\n\n            <div className=\"text-center p-6 bg-teal-50 rounded-lg\">\n              <div className=\"bg-teal-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Heart className=\"h-8 w-8 text-teal-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-teal-800 mb-2\">Donate</h3>\n              <p className=\"text-gray-600\">Be notified when your blood is needed nearby</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Partner Hospitals */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-teal-800 mb-4\">Partner Hospitals</h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto\">\n              Trusted healthcare partners working with us to save lives\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {hospitals.map((hospital, index) => (\n              <div\n                key={index}\n                className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow\"\n              >\n                <div className=\"h-32 bg-gradient-to-r from-teal-400 to-teal-600 flex items-center justify-center\">\n                  <MapPin className=\"h-8 w-8 text-white\" />\n                </div>\n                <div className=\"p-4\">\n                  <h3 className=\"font-semibold text-teal-800 mb-1\">{hospital.name}</h3>\n                  <p className=\"text-gray-600 text-sm\">{hospital.location}</p>\n                  <button className=\"mt-3 text-teal-600 hover:text-teal-800 text-sm font-medium\">\n                    View Dashboard →\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-teal-800 text-white py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-4 gap-8\">\n            <div>\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Heart className=\"h-6 w-6\" />\n                <span className=\"font-bold text-lg\">BloodLink</span>\n              </div>\n              <p className=\"text-teal-200\">\n                Connecting donors with hospitals through AI-powered matching.\n              </p>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n              <ul className=\"space-y-2 text-teal-200\">\n                <li><Link to=\"/\" className=\"hover:text-white\">Home</Link></li>\n                <li><Link to=\"/about\" className=\"hover:text-white\">About</Link></li>\n                <li><Link to=\"/hospitals\" className=\"hover:text-white\">Hospitals</Link></li>\n                <li><Link to=\"/register\" className=\"hover:text-white\">Register</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Support</h4>\n              <ul className=\"space-y-2 text-teal-200\">\n                <li><a href=\"#\" className=\"hover:text-white\">Help Center</a></li>\n                <li><a href=\"#\" className=\"hover:text-white\">Contact Us</a></li>\n                <li><a href=\"#\" className=\"hover:text-white\">Privacy Policy</a></li>\n                <li><a href=\"#\" className=\"hover:text-white\">Terms of Service</a></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Connect</h4>\n              <p className=\"text-teal-200 mb-2\">Follow us for updates</p>\n              <div className=\"flex space-x-4\">\n                <a href=\"#\" className=\"text-teal-200 hover:text-white\">Facebook</a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white\">Twitter</a>\n                <a href=\"#\" className=\"text-teal-200 hover:text-white\">Instagram</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-teal-700 mt-8 pt-8 text-center text-teal-200\">\n            <p>&copy; 2024 BloodLink. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","size_bytes":7320},"backend/seed.js":{"content":"const mongoose = require('mongoose');\n\n// Connect to MongoDB\nmongoose.connect('mongodb://localhost:27017/bloodLink', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n.then(() => console.log('Connected to MongoDB - bloodLink database for seeding'))\n.catch(err => console.error('MongoDB connection error:', err));\n\n// Donor Schema\nconst donorSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  age: { type: Number, required: true, min: 18, max: 65 },\n  gender: { type: String, required: true },\n  bloodGroup: { type: String, required: true },\n  email: { type: String, required: true },\n  phone: { type: String, required: true },\n  address: { type: String, required: true },\n  city: { type: String, required: true },\n  state: { type: String, required: true },\n  medicalConditions: { type: String, required: true },\n  donationHistory: { type: String, required: true },\n  status: { type: String, default: 'pending' },\n  createdAt: { type: Date, default: Date.now }\n});\n\nconst Donor = mongoose.model('Donor', donorSchema);\n\n// Sample donor data\nconst sampleDonors = [\n  {\n    name: 'Aman Thahani',\n    age: 19,\n    gender: 'male',\n    bloodGroup: 'O+',\n    email: 'amanthahani@gmail.com',\n    phone: '0734567897',\n    address: 'abcd',\n    city: 'efgh',\n    state: 'Kerala',\n    medicalConditions: 'None',\n    donationHistory: 'First time donor',\n    status: 'active'\n  },\n  {\n    name: 'Nabhan V Nazar',\n    age: 22,\n    gender: 'male',\n    bloodGroup: 'A+',\n    email: 'nabhanvnazar@gmail.com',\n    phone: '0987654321',\n    address: 'xyz street',\n    city: 'Kochi',\n    state: 'Kerala',\n    medicalConditions: 'None',\n    donationHistory: 'Regular donor',\n    status: 'active'\n  },\n  {\n    name: 'Sarah Johnson',\n    age: 25,\n    gender: 'female',\n    bloodGroup: 'B-',\n    email: 'sarah.johnson@email.com',\n    phone: '0555123456',\n    address: '456 Oak Avenue',\n    city: 'Trivandrum',\n    state: 'Kerala',\n    medicalConditions: 'None',\n    donationHistory: '2 previous donations',\n    status: 'active'\n  },\n  {\n    name: 'Rajesh Kumar',\n    age: 30,\n    gender: 'male',\n    bloodGroup: 'AB+',\n    email: 'rajesh.kumar@email.com',\n    phone: '0444987654',\n    address: '789 Pine Road',\n    city: 'Calicut',\n    state: 'Kerala',\n    medicalConditions: 'None',\n    donationHistory: '3 previous donations',\n    status: 'active'\n  },\n  {\n    name: 'Priya Menon',\n    age: 28,\n    gender: 'female',\n    bloodGroup: 'O-',\n    email: 'priya.menon@email.com',\n    phone: '0333876543',\n    address: '321 Maple Street',\n    city: 'Thrissur',\n    state: 'Kerala',\n    medicalConditions: 'None',\n    donationHistory: '1 previous donation',\n    status: 'active'\n  }\n];\n\n// Seed function\nasync function seedDatabase() {\n  try {\n    // Clear existing donors\n    await Donor.deleteMany({});\n    console.log('Cleared existing donor data');\n\n    // Insert sample donors\n    const insertedDonors = await Donor.insertMany(sampleDonors);\n    console.log(`Successfully seeded ${insertedDonors.length} donors`);\n\n    // Display inserted data\n    console.log('\\nSeeded Donors:');\n    insertedDonors.forEach((donor, index) => {\n      console.log(`${index + 1}. ${donor.name} - ${donor.bloodGroup} - ${donor.city}, ${donor.state}`);\n    });\n\n  } catch (error) {\n    console.error('Error seeding database:', error);\n  } finally {\n    mongoose.connection.close();\n  }\n}\n\n// Run the seed function\nseedDatabase();\n","size_bytes":3413},"frontend/src/style.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n","size_bytes":59},"README.md":{"content":"HB\n","size_bytes":3},"frontend/src/main.ts":{"content":"import './style.css'\nimport typescriptLogo from './typescript.svg'\nimport viteLogo from '/vite.svg'\nimport { setupCounter } from './counter.ts'\n\ndocument.querySelector<HTMLDivElement>('#app')!.innerHTML = `\n  <div>\n    <a href=\"https://vite.dev\" target=\"_blank\">\n      <img src=\"${viteLogo}\" class=\"logo\" alt=\"Vite logo\" />\n    </a>\n    <a href=\"https://www.typescriptlang.org/\" target=\"_blank\">\n      <img src=\"${typescriptLogo}\" class=\"logo vanilla\" alt=\"TypeScript logo\" />\n    </a>\n    <h1>Vite + TypeScript</h1>\n    <div class=\"card\">\n      <button id=\"counter\" type=\"button\"></button>\n    </div>\n    <p class=\"read-the-docs\">\n      Click on the Vite and TypeScript logos to learn more\n    </p>\n  </div>\n`\n\nsetupCounter(document.querySelector<HTMLButtonElement>('#counter')!)\n","size_bytes":781},"prisma/migrations/migration_lock.toml":{"content":"# Please do not edit this file manually\n# It should be added in your version-control system (e.g., Git)\nprovider = \"sqlite\"\n","size_bytes":124},"frontend/vite.config.ts":{"content":"import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport path from 'path'\n\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n    },\n  },\n  server: {\n    hmr: {\n      overlay: false, // Disable error overlay\n    },\n  },\n  build: {\n    commonjsOptions: {\n      transformMixedEsModules: true,\n    },\n  },\n})\n","size_bytes":405},"frontend/tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n","size_bytes":182},"frontend/src/App.tsx":{"content":"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Pages\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Hospitals from './pages/Hospitals';\nimport Login from './pages/Login';\nimport LandingPage from './pages/LandingPage';\nimport DonorRegistration from './pages/DonorRegistration';\nimport HospitalDashboard from './pages/HospitalDashboard';\n\n// Components\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/hospitals\" element={<Hospitals />} />\n          <Route path=\"/home\" element={<LandingPage />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<DonorRegistration />} />\n          <Route path=\"/dashboard\" element={<HospitalDashboard />} />\n        </Routes>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","size_bytes":1469},"frontend/src/pages/Hospitals.tsx":{"content":"import { MapPin, Phone, Mail, Clock } from 'lucide-react';\n\nconst Hospitals = () => {\n  const hospitals = [\n    {\n      id: 1,\n      name: 'City General Hospital',\n      address: '123 Main Street, Downtown',\n      phone: '+1 (555) 123-4567',\n      email: 'info@citygeneral.com',\n      bloodTypes: ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'],\n      emergency: true,\n    },\n    {\n      id: 2,\n      name: 'Metropolitan Medical Center',\n      address: '456 Healthcare Ave, Medical District',\n      phone: '+1 (555) 234-5678',\n      email: 'contact@metro-med.com',\n      bloodTypes: ['A+', 'B+', 'O+', 'O-'],\n      emergency: false,\n    },\n    {\n      id: 3,\n      name: 'Regional Blood Bank',\n      address: '789 Donor Plaza, Westside',\n      phone: '+1 (555) 345-6789',\n      email: 'donations@regionalblood.org',\n      bloodTypes: ['All Types'],\n      emergency: false,\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-teal-900 mb-4\">\n            Partner Hospitals\n          </h1>\n          <p className=\"text-xl text-teal-700 max-w-3xl mx-auto\">\n            Our network of trusted hospitals and blood banks working together to save lives.\n            Find a location near you and see current blood type needs.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {hospitals.map((hospital) => (\n            <div\n              key={hospital.id}\n              className=\"bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow\"\n            >\n              <div className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-xl font-semibold text-teal-900\">\n                    {hospital.name}\n                  </h3>\n                  {hospital.emergency && (\n                    <span className=\"bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded\">\n                      Emergency\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"space-y-3 mb-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <MapPin className=\"h-5 w-5 text-teal-600 mt-0.5\" />\n                    <span className=\"text-gray-700\">{hospital.address}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Phone className=\"h-5 w-5 text-teal-600\" />\n                    <span className=\"text-gray-700\">{hospital.phone}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Mail className=\"h-5 w-5 text-teal-600\" />\n                    <span className=\"text-gray-700\">{hospital.email}</span>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <h4 className=\"text-sm font-medium text-teal-900 mb-2\">\n                    Currently Needed:\n                  </h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {hospital.bloodTypes.map((type) => (\n                      <span\n                        key={type}\n                        className=\"bg-teal-100 text-teal-800 text-xs font-medium px-2.5 py-0.5 rounded\"\n                      >\n                        {type}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"mt-4 flex items-center text-sm text-gray-600\">\n                  <Clock className=\"h-4 w-4 mr-2\" />\n                  <span>Open 24/7 for emergencies</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-12 bg-white rounded-lg shadow-lg p-8\">\n          <h2 className=\"text-2xl font-bold text-teal-900 mb-4\">\n            Become a Partner Hospital\n          </h2>\n          <p className=\"text-gray-700 mb-6\">\n            Join our network of life-saving institutions. Partner with us to access our donor database\n            and streamline blood donation processes.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <button className=\"bg-teal-600 hover:bg-teal-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors\">\n              Contact Us\n            </button>\n            <button className=\"border border-teal-600 text-teal-600 hover:bg-teal-50 px-6 py-3 rounded-lg font-semibold transition-colors\">\n              Learn More\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hospitals;\n","size_bytes":4831},"frontend/src/components/Navbar.tsx":{"content":"import { Link } from 'react-router-dom';\nimport { Heart, Menu, X } from 'lucide-react';\nimport { useState } from 'react';\n\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <nav className=\"bg-white/80 backdrop-blur-md shadow-lg sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex items-center\">\n            <Link to=\"/\" className=\"flex items-center space-x-2\">\n              <Heart className=\"h-8 w-8 text-teal-600\" />\n              <span className=\"font-bold text-xl text-teal-800\">BloodLink</span>\n            </Link>\n          </div>\n\n          {/* Desktop Menu */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            <Link to=\"/\" className=\"text-teal-700 hover:text-teal-900 transition-colors\">\n              Home\n            </Link>\n            <Link to=\"/about\" className=\"text-teal-700 hover:text-teal-900 transition-colors\">\n              About\n            </Link>\n            <Link to=\"/hospitals\" className=\"text-teal-700 hover:text-teal-900 transition-colors\">\n              Hospitals\n            </Link>\n            <Link to=\"/register\" className=\"text-teal-700 hover:text-teal-900 transition-colors\">\n              Register\n            </Link>\n            <Link to=\"/login\" className=\"text-teal-700 hover:text-teal-900 transition-colors\">\n              Login\n            </Link>\n            <Link\n              to=\"/register\"\n              className=\"bg-lemon-500 hover:bg-lemon-600 text-teal-900 px-4 py-2 rounded-lg font-semibold transition-colors\"\n            >\n              Become a Donor\n            </Link>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden flex items-center\">\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"text-teal-700 hover:text-teal-900\"\n            >\n              {isOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 bg-white/95 backdrop-blur-md rounded-lg mt-2\">\n              <Link\n                to=\"/\"\n                className=\"block px-3 py-2 text-teal-700 hover:text-teal-900\"\n                onClick={() => setIsOpen(false)}\n              >\n                Home\n              </Link>\n              <Link\n                to=\"/about\"\n                className=\"block px-3 py-2 text-teal-700 hover:text-teal-900\"\n                onClick={() => setIsOpen(false)}\n              >\n                About\n              </Link>\n              <Link\n                to=\"/hospitals\"\n                className=\"block px-3 py-2 text-teal-700 hover:text-teal-900\"\n                onClick={() => setIsOpen(false)}\n              >\n                Hospitals\n              </Link>\n              <Link\n                to=\"/register\"\n                className=\"block px-3 py-2 text-teal-700 hover:text-teal-900\"\n                onClick={() => setIsOpen(false)}\n              >\n                Register\n              </Link>\n              <Link\n                to=\"/login\"\n                className=\"block px-3 py-2 text-teal-700 hover:text-teal-900\"\n                onClick={() => setIsOpen(false)}\n              >\n                Login\n              </Link>\n              <Link\n                to=\"/register\"\n                className=\"block px-3 py-2 bg-lemon-500 hover:bg-lemon-600 text-teal-900 rounded-lg font-semibold\"\n                onClick={() => setIsOpen(false)}\n              >\n                Become a Donor\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","size_bytes":3851},"frontend/src/main.tsx":{"content":"import React, { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './style.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n","size_bytes":237},"frontend/src/pages/About.tsx":{"content":"import { Heart, Users, Award, Target, Shield, Globe } from 'lucide-react';\n\nconst About = () => {\n  const stats = [\n    { label: 'Lives Saved', value: '50,000+', icon: Heart },\n    { label: 'Active Donors', value: '25,000+', icon: Users },\n    { label: 'Partner Hospitals', value: '150+', icon: Award },\n    { label: 'Years of Service', value: '10+', icon: Target },\n  ];\n\n  const values = [\n    {\n      icon: Shield,\n      title: 'Safety First',\n      description: 'All blood donations undergo rigorous screening and testing to ensure the highest safety standards.',\n    },\n    {\n      icon: Heart,\n      title: 'Life-Saving Impact',\n      description: 'Every donation can save up to three lives. Your contribution makes a real difference.',\n    },\n    {\n      icon: Globe,\n      title: 'Community Focused',\n      description: 'Building stronger communities through compassion, generosity, and collective action.',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-teal-50 to-teal-100\">\n      {/* Hero Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <Heart className=\"mx-auto h-16 w-16 text-teal-600 mb-8\" />\n          <h1 className=\"text-4xl md:text-6xl font-bold text-teal-900 mb-6\">\n            About BloodLink\n          </h1>\n          <p className=\"text-xl text-teal-700 mb-8\">\n            Connecting donors with those in need, one drop at a time. We're on a mission to\n            ensure no one dies waiting for blood.\n          </p>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-white/50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {stats.map((stat, index) => (\n              <div key={index} className=\"text-center\">\n                <stat.icon className=\"mx-auto h-12 w-12 text-teal-600 mb-4\" />\n                <div className=\"text-3xl font-bold text-teal-900 mb-2\">\n                  {stat.value}\n                </div>\n                <div className=\"text-teal-700\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-teal-900 mb-4\">Our Mission</h2>\n            <p className=\"text-xl text-teal-700\">\n              To create a world where no one dies waiting for blood by connecting willing donors\n              with hospitals and patients in need through technology and compassion.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-white/50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h2 className=\"text-3xl font-bold text-center text-teal-900 mb-12\">\n            Our Values\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {values.map((value, index) => (\n              <div key={index} className=\"text-center\">\n                <value.icon className=\"mx-auto h-12 w-12 text-teal-600 mb-4\" />\n                <h3 className=\"text-xl font-semibold text-teal-900 mb-2\">\n                  {value.title}\n                </h3>\n                <p className=\"text-teal-700\">{value.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Story Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <h2 className=\"text-3xl font-bold text-center text-teal-900 mb-8\">\n            Our Story\n          </h2>\n          <div className=\"prose prose-lg mx-auto text-teal-700\">\n            <p className=\"mb-6\">\n              BloodLink was founded in 2014 by a group of medical professionals and technology\n              enthusiasts who witnessed firsthand the challenges of blood shortage in emergency situations.\n            </p>\n            <p className=\"mb-6\">\n              What started as a small local initiative has grown into a nationwide network connecting\n              thousands of donors with hundreds of hospitals. Our platform uses cutting-edge technology\n              to match donors with recipients quickly and efficiently.\n            </p>\n            <p>\n              Today, BloodLink continues to innovate and expand, ensuring that every person who needs\n              blood can access it when they need it most. We're not just saving lives – we're building\n              a community of heroes, one donation at a time.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-teal-600\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-6\">\n            Join Our Mission\n          </h2>\n          <p className=\"text-xl text-teal-100 mb-8\">\n            Whether you're a donor, hospital, or supporter, there's a place for you in our community.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button className=\"bg-white text-teal-600 hover:bg-gray-50 px-8 py-3 rounded-lg font-semibold transition-colors\">\n              Become a Donor\n            </button>\n            <button className=\"border border-white text-white hover:bg-white hover:text-teal-600 px-8 py-3 rounded-lg font-semibold transition-colors\">\n              Partner With Us\n            </button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","size_bytes":5805}},"version":2}